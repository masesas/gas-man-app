import 'dart:typed_data';
import 'package:pdf/pdf.dart';
import 'package:pdf/widgets.dart' as pw;

class InstallationChecklistPDF {
  static Future<Uint8List> generate({
    required String type,
    required String make,
    required String model,
    required String location,
    required String serial,
    required String gcn,
    required String heatInput,
    required String runTemp,
    required String gasRate,
    required String comments,
  }) async {
    final pdf = pw.Document();

    pdf.addPage(
      pw.Page(
        build: (pw.Context context) {
          return pw.Container(
            padding: const pw.EdgeInsets.all(20),
            child: pw.Column(
              crossAxisAlignment: pw.CrossAxisAlignment.start,
              children: [
                pw.Text(
                  "Installation / Commissioning Checklist",
                  style: pw.TextStyle(
                    fontSize: 22,
                    fontWeight: pw.FontWeight.bold,
                    color: PdfColors.teal,
                  ),
                ),
                pw.SizedBox(height: 20),

                // Appliance Details
                sectionTitle("Appliance Details"),
                keyValue("Type", type),
                keyValue("Make", make),
                keyValue("Model", model),
                keyValue("Location", location),
                keyValue("Serial No", serial),
                keyValue("GC Number", gcn),

                pw.SizedBox(height: 16),
                sectionTitle("Safety Checks"),
                keyValue("Heat Input (kW/h)", heatInput),
                keyValue("Running Set Point Temp (°C)", runTemp),

                pw.SizedBox(height: 16),
                sectionTitle("Gas Checks"),
                keyValue("Gas Rate (m³/h)", gasRate),

                pw.SizedBox(height: 16),
                sectionTitle("Engineer Comments"),
                pw.Container(
                  width: double.infinity,
                  padding: const pw.EdgeInsets.all(8),
                  decoration: pw.BoxDecoration(
                    border: pw.Border.all(color: PdfColors.grey),
                  ),
                  child: pw.Text(comments.isEmpty ? "N/A" : comments),
                ),

                pw.Spacer(),
                pw.Align(
                  alignment: pw.Alignment.centerRight,
                  child: pw.Text(
                    "Generated by Gas Engineer App",
                    style: const pw.TextStyle(
                      fontSize: 10,
                      color: PdfColors.grey,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
    );

    return pdf.save();
  }

  static pw.Widget sectionTitle(String title) => pw.Padding(
    padding: const pw.EdgeInsets.only(bottom: 5),
    child: pw.Text(
      title,
      style: pw.TextStyle(
        fontSize: 16,
        fontWeight: pw.FontWeight.bold,
        color: PdfColors.teal,
      ),
    ),
  );

  static pw.Widget keyValue(String key, String value) => pw.Padding(
    padding: const pw.EdgeInsets.symmetric(vertical: 2),
    child: pw.Row(
      mainAxisAlignment: pw.MainAxisAlignment.spaceBetween,
      children: [
        pw.Text(
          key,
          style: pw.TextStyle(
            fontWeight: pw.FontWeight.bold,
            color: PdfColors.black,
          ),
        ),
        pw.Text(
          value.isEmpty ? "—" : value,
          style: const pw.TextStyle(color: PdfColors.black),
        ),
      ],
    ),
  );
}
